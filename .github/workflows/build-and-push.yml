name: Build Docker Image

on:
  push:
    branches:
      - 'master'
      - 'main'
    paths-ignore:
      - '**/README.md'

  workflow_dispatch:

jobs:
  test:
      name: Test SDK
      runs-on: ubuntu-latest

      strategy:
        matrix:
          python_version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11']

      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Set up Python
          uses: actions/setup-python@v4
          with:
            python_version: ${{matrix.python_version}}

        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r sdk/requirements.txt

        - name: Create .env file
          run: |
            echo "RAPIDAPI_REVIEWS_KEY=${{ secrets.RAPIDAPI_REVIEWS_KEY }}" >> ./sdk/.env
            echo "INTEGRATION_TESTS_INTRANET_USER=${{ secrets.INTEGRATION_TESTS_INTRANET_USER }}" >> ./sdk/.env
            echo "INTEGRATION_TESTS_INTRANET_PASSWORD=${{ secrets.INTEGRATION_TESTS_INTRANET_PASSWORD }}" >> ./sdk/.env
            echo "INTEGRATION_TESTS_SAT_USER=${{ secrets.INTEGRATION_TESTS_SAT_USER }}" >> ./sdk/.env
            echo "INTEGRATION_TESTS_SAT_PASSWORD=${{ secrets.INTEGRATION_TESTS_SAT_PASSWORD }}" >> ./sdk/.env

        - name: Install package
          run: |
            make -C sdk test

  build-and-push:
    name: Publish Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build latest image
        run: docker buildx build --push -t ghcr.io/marcorfilacarreras/nactite:latest --platform linux/amd64,linux/arm64 .
